#!/usr/bin/env ruby

from_dirs = ARGV
from_dirs = Dir["/Volumes/*/DCIM"] if from_dirs.empty?

puts "Importing from #{from_dirs.inspect}"

from_dirs.each do |from_dir|
  entries = Dir["#{from_dir}/**/*"].sort
  require 'digest/sha1'
  hash = Digest::SHA1.hexdigest(entries.inspect)

  now = Time.now.utc.strftime("%Y-%m-%d-#{hash}")
  to_dir = "#{ENV["HOME"]}/Desktop/dropbox/media-#{now}"
  puts "Copying from #{from_dir} to #{to_dir}"

  require 'fileutils'
  FileUtils.mkdir_p(to_dir)

  # rsync can't operate if the "uchg" has been set.
  # If it's there, assume the rsync previously succeeded.
  if `ls -ldO #{to_dir} 2>/dev/null`.match?(/ uchg /)
    puts "Skipping rsync because #{to_dir} has uchg set"
  else
    system "rsync", "-av", "--progress", "--delete", "--chmod=Fugo-wX,Fugo+r,Dugo-w,Dugo+rx", "--", from_dir + "/", to_dir + "/"
    $?.success? or exit 1
  end

  system "chflags", "-v", "-R", "uchg", to_dir
  $?.success? or exit 1

  system "./with-live", "./bin/upload-missing", "--debug-upload", "var/live/ls", "/Camera Uploads", to_dir
  $?.success? or exit 1

  FileUtils.rm_rf from_dir
  puts "#{from_dir} -> #{to_dir} succeeded"
  puts "Maybe now run:\ndiskutil unmount #{File.dirname(from_dir)}"
end
